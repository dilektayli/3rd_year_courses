1. (a) alias dateinfo='echo $(date); echo $PWD; ls -l'
1. (b) we need to add it to the start up file which is .bash_profile
1. (c) export PATH="$PATH:$HOME/bin"

2. Permissions allow us to control who is executing, deleting/renaming/creating, and listing the contents for the directories. 
	Also, for the files we can control who is reading, writing, and executing. 
	r-> read , w -> write , x -> execute

2. (a) owner has the permission for execute "correspond", but not reading permission for business. 
So, owner cannot list the content of the file. Also, group and other will not be able to see the content due to only having read permission.
2. (b) Since cheese_co file is readable by everyone; owner, group, and others can execute the command successfully. 
2. (c) Owner and group can execute the command since the parent directory(milk_co) has write(w) permission for owner and group. However others cannot remove the file because the parent directory(milk_co) do not have the permission.

3. (a) find . -type f -mtime +50 -mtime -100
3. (b) find . maxdepth 1 -type f -perm 777 -exec chmod 755 {} \;

4. grep -l "^util" dirlist* | tar czf utils.tgz -T -
 
 du -h utils.tgz for compressed file size (I could not find another command so I used this from chapter 20.)
output = 4,0 K
compressed file size = 4,0 K -> convert it to bytes (4096 bytes)

 ls -l utils.tgz for uncompressed archive
output = -rw-rw-r-- 1 dtayli dtayli 45 May 17 16:03 utils.tgz
uncompressed file size = 45 bytes

Compression ratio = (uncompressed file size- compressed file size) / uncompressed file size 
                  = (45-4096)/45 = -4051 / 45 = -90.02


5. (a) grep -c "^$" file1.txt
5. (b) the command grep -h "^[^hello]" hello.txt
first ^ (caret) means starts with.
[^hello] means the remaining characters must not be present at the given character position.
That's why we do not see any lines that starts with any of the set characters (h,e,l,o).
output is from the given command: 
Hello World
world hello
WORLD HELLO
5. (c) grep -E "\b[0-9]{1,3}\b" file.txt
5. (d)  ls -l | grep -E "^(-rwxrwxrwx|-rwxr-xr-x)\s"
777 -> -rwxrwxrwx
755 -> -rwxr-xr-x



